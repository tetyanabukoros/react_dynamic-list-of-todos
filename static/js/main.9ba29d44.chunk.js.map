{"version":3,"sources":["api.ts","types/FilterType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","TodoList","preparedTodos","setSelectedTodoId","selectedTodoId","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","completeTodoFilter","setCompleteTodoFilter","query","setQuery","name","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","setSelectedTodosId","selectedTodo","useState","user","setUser","useEffect","userId","Number","href","App","todos","setTodos","prettyQuery","toLowerCase","trim","visibleTodos","active","filter","el","allTodo","includes","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ba29d44.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  preparedTodos: Todo[],\n  setSelectedTodoId: (selectedTodoId: number | null) => void,\n  selectedTodoId: number | null,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  preparedTodos,\n  setSelectedTodoId,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    {preparedTodos && (\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n    )}\n\n    <tbody>\n\n      {preparedTodos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed\n            ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            )\n            : <td className=\"is-vcentered\" />}\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodoId(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn(\n                    {\n                      'far fa-eye': selectedTodoId !== todo.id,\n                      'far fa-eye-slash': selectedTodoId === todo.id,\n                    },\n                  )}\n                />\n                {' '}\n              </span>\n            </button>\n          </td>\n        </tr>\n\n      ))}\n\n    </tbody>\n  </table>\n);\n","interface Props {\n  completeTodoFilter: string,\n  setCompleteTodoFilter: (selectTodos: string) => void,\n  query: string,\n  setQuery: (query: string) => void,\n}\n\nexport const TodoFilter:React.FC<Props> = ({\n  completeTodoFilter,\n  setCompleteTodoFilter,\n  query,\n  setQuery,\n}) => {\n  return (\n\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            name=\"filterGoods\"\n            value={completeTodoFilter}\n            data-cy=\"statusSelect\"\n            onChange={(event) => setCompleteTodoFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query !== '' && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  setSelectedTodosId: (selectedTodosId: number | null) => void,\n  selectedTodo: Todo | null,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodosId,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(Number(selectedTodo?.userId))\n      .then(setUser);\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {' '}\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodosId(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed && (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n              {!selectedTodo?.completed && (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport './App.css';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { FilterType } from './types/FilterType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [completeTodoFilter, setCompleteTodoFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n\n  const prettyQuery = query.toLowerCase().trim();\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  let visibleTodos = [...todos];\n\n  switch (completeTodoFilter) {\n    case (FilterType.active):\n      visibleTodos = [...todos].filter(el => el.completed === false);\n      break;\n\n    case FilterType.completed:\n      visibleTodos = [...todos].filter(el => el.completed === true);\n      break;\n\n    default:\n      visibleTodos = [...todos];\n  }\n\n  const visibleFilteredTodos = (allTodos: Todo[]) => {\n    return allTodos.filter(allTodo => allTodo.title.toLowerCase().includes(prettyQuery));\n  };\n\n  const preparedTodos = visibleFilteredTodos(visibleTodos);\n\n  const selectedTodo = todos.find(el => el.id === selectedTodoId) || null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                completeTodoFilter={completeTodoFilter}\n                setCompleteTodoFilter={setCompleteTodoFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    preparedTodos={preparedTodos}\n                    setSelectedTodoId={setSelectedTodoId}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodoId && (\n        <TodoModal\n          setSelectedTodosId={setSelectedTodoId}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}